// This file is auto-generated by @hey-api/openapi-ts

export type CanvasTemplate = {
    /**
     * The unique identifier of the canvas template
     */
    id: string;
    /**
     * The name of the template
     */
    name?: string;
    /**
     * The Handlebars template string
     */
    template: string;
    /**
     * JSON schema defining the template variables
     */
    schema: {
        [key: string]: unknown;
    };
    /**
     * When the template was created
     */
    createdAt: string;
    /**
     * When the template was last updated
     */
    updatedAt: string;
};

export type CreateCanvasTemplate = {
    name: string;
    template: string;
    schema: {
        [key: string]: unknown;
    };
};

export type CanvasTemplateInstance = {
    id: string;
    templateId: string;
    variables: {
        [key: string]: unknown;
    };
    renderedOutput: string;
    createdAt: string;
    updatedAt: string;
};

export type UpsertLink = {
    /**
     * The relation type of the link.
     */
    relationType: string;
    /**
     * The href of the link.
     */
    href: string;
    /**
     * The object key of the link, if TYPE is OBJECT.
     */
    objectKey?: string;
    /**
     * The title of the link.
     */
    title: string;
    /**
     * The language of the link.
     */
    lang?: Array<string>;
};

export type CreateLinkSet = {
    /**
     * The identifier of the Link Set.
     */
    identifier: string;
    /**
     * The qualifier of the Link Set.
     */
    qualifier: string;
    /**
     * The links of the Link Set.
     */
    links: Array<UpsertLink>;
};

export type Link = {
    /**
     * The relation type of the link.
     */
    relationType: string;
    /**
     * The href of the link.
     */
    href?: string;
    /**
     * The object key of the link, if TYPE is OBJECT.
     */
    objectKey?: string;
    /**
     * The title of the link
     */
    title: string;
    /**
     * The language of the link.
     */
    lang?: Array<string>;
    /**
     * The creation date of the Link.
     */
    createdAt: string;
    /**
     * The last update date of the Link.
     */
    updatedAt: string;
};

export type LinkSet = {
    /**
     * The ID of the Link Set.
     */
    id?: string;
    /**
     * The identifier of the Link Set.
     */
    identifier?: string;
    /**
     * The qualifier of the Link Set.
     */
    qualifier: string;
    /**
     * The links of the Link Set.
     */
    links: Array<Link>;
    /**
     * The creation date of the Link Set.
     */
    createdAt: string;
    /**
     * The last update date of the Link Set.
     */
    updatedAt: string;
};

export type UpdateLinkSet = {
    /**
     * The identifier of the Link Set.
     */
    identifier: string;
    /**
     * The qualifier of the Link Set.
     */
    qualifier: string;
    /**
     * The links of the Link Set.
     */
    links: Array<UpsertLink>;
};

export type CreateExternalResolver = {
    /**
     * The href of the External Resolver.
     */
    href: string;
    /**
     * The pattern of the External Resolver.
     */
    pattern: string;
    /**
     * The qualifier of the External Resolver.
     */
    qualifier: string;
    /**
     * The creation data of the External Resolver.
     */
    childExternalResolvers: Array<string>;
};

export type UpdateExternalResolver = {
    /**
     * The href of the External Resolver.
     */
    href: string;
    /**
     * The pattern of the External Resolver.
     */
    pattern: string;
    /**
     * The qualifier of the External Resolver.
     */
    qualifier: string;
    /**
     * The creation data of the External Resolver.
     */
    childExternalResolvers: Array<string>;
};

export type FindCanvasTemplateData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/canvas-templates/{id}';
};

export type FindCanvasTemplateResponses = {
    /**
     * The Canvas Template was successfully obtained.
     */
    200: CanvasTemplate;
};

export type FindCanvasTemplateResponse = FindCanvasTemplateResponses[keyof FindCanvasTemplateResponses];

export type CreateCanvasTemplateData = {
    body: CreateCanvasTemplate;
    path?: never;
    query?: never;
    url: '/canvas-templates';
};

export type CreateCanvasTemplateResponses = {
    /**
     * The Canvas Template that was created.
     */
    200: CanvasTemplate;
};

export type CreateCanvasTemplateResponse = CreateCanvasTemplateResponses[keyof CreateCanvasTemplateResponses];

export type RenderCanvasTemplateData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/canvas-templates/{id}/render';
};

export type RenderCanvasTemplateResponses = {
    /**
     * Instantiation of the Canvas Template as a Canvas Template Instance
     */
    200: CanvasTemplateInstance;
};

export type RenderCanvasTemplateResponse = RenderCanvasTemplateResponses[keyof RenderCanvasTemplateResponses];